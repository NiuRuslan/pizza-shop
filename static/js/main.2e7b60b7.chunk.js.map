{"version":3,"sources":["product-card.jsx","menu.jsx","navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["ProductCard","product","name","url","description","types","pricelist","sizes","prices","useState","selectedSize","setSelectedSize","selectedPrice","setSelectedPrice","selectedType","setSelectedType","cart","setCart","setTotal","selected","selectSizes","map","size","indx","className","key","value","id","src","onClick","e","target","style","marginTop","prevCart","reduce","acc","el","totalPrice","Menu","menu","Navbar","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e7b60b7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function ProductCard({ product }) {\n  const {\n    name, url, description, types, pricelist: { sizes, prices },\n  } = product;\n\n  const [selectedSize, setSelectedSize] = useState(sizes[0]);\n  const [selectedPrice, setSelectedPrice] = useState(prices[0]);\n  const [selectedType, setSelectedType] = useState(types[0]);\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  const selected = \"ui button active\"\n  const selectSizes = sizes.map((size, indx) => (\n    <button className={selectedSize == size ? selected: \"ui button\"} key={size} value={size} id={indx}> {size} cm </button>\n  ));\n\n  const onHandleSize = (e) => {\n    setSelectedSize(e.target.value);\n    setSelectedPrice(prices[e.target.id]);\n  };\n\n  const onHandleType = (e) => {\n    setSelectedType(e.target.value);\n  };\n\n  const onHandleCart = () => {\n    setCart((prevCart) => [...prevCart, { name, selectedSize, selectedPrice, selectedType }]);\n    setTotal(() => {\n      cart.reduce((acc, el) => acc + el.selectedPrice, 0);\n    });\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"image\">\n        <img src={url} />\n      </div>\n      <div className=\"content\">\n        <div className=\"header\">{name}</div>\n        <div className=\"description\">\n          {description}\n        </div>\n      </div>\n      <div className=\"extra content center aligned\">\n        <div>\n          <div className=\"fluid ui buttons\" onClick={onHandleSize}>\n            {selectSizes}\n          </div>\n        </div>\n        <div style={{ marginTop: '5px' }}>\n          <div className=\"fluid ui buttons\" onClick={onHandleType}>\n            <button className={selectedType === types[0] ? selected : 'ui button'} key={types[0]} value={types[0]}>\n              {types[0]}\n            </button>\n            <div className=\"or\" />\n            <button className={selectedType === types[1] ? selected : 'ui button'} key={types[1]} value={types[1]}>\n              {types[1]}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"ui vertical animated orange button\" onClick={onHandleCart}>\n        <div className=\"hidden content\">\n          Add to cart\n          {cart.totalPrice}\n        </div>\n        <div className=\"visible content\">\n          <i className=\"cart arrow down icon\" />\n          {selectedPrice} $\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ProductCard from './product-card';\n\nexport default function Menu() {\n  const products = [{\n    name: 'Pepperoni',\n    description: 'American classic with spicy pepperoni, Mozzarella and signature tomato sauce.',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/Pepperoni-traditional.jpg',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [5, 7, 9],\n    },\n  }, {\n    name: 'Margherita',\n    description: 'Traditional recipe with signature tomato sauce, Mozzarella, oregano and juicy tomatoes',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/Margherita-traditional.jpg',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [5, 7, 9],\n    },\n  }, {\n    name: 'Carbonara',\n    description: 'Classic favorite recipe: crispy bacon, cream cheese, juicy tomatoes, onions, Mozzarella and Italian herbs blend.',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/2de43892e001217429a0d2d4e4614494.png',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [6, 8, 10],\n    },\n  }, {\n    name: '4 cheeses',\n    description: 'Traditional blend of cheeses: Mozzarella, soft fresh cheese, blue cheese, Reggianito with signature tomato sauce and spicy oregano',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/4-cheese-traditional.jpg',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [6, 8, 10],\n    },\n  }, {\n    name: 'Hawaiian',\n    description: 'Tropical classic with flavorful ham, tomato sauce and Mozzarella combined with pineapple bits.',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/Hawai-traditional.jpg',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [6, 8, 10],\n    },\n  }, {\n    name: 'Mexican',\n    description: 'Spicy pizza with chicken fillet, tomato sauce, Mozzarella, mushrooms, onions, tomatoes, sweet green pepper and jalapeno pepper.',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/Mexican-traditional.jpg',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [6, 8, 10],\n    },\n  }, {\n    name: 'Vegetarian',\n    description: 'Mozzarella cheese, tomato sauce, tomatoes, mushrooms, sweet green pepper, onion, olives.',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/Vegetarian-traditional.jpg',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [6, 8, 10],\n    },\n  }, {\n    name: 'Ultimate cheeseburger',\n    description: 'Super pizza with Mozzarella, Parmesan, Fontina and smoked Italian cheeses blend, \"Thousand Islands\" sauce, beef, bacon, juicy tomatoes, pickles and onions.',\n    url: 'https://cdn.papajohns.ru//images/catalog/thumbs/full/Super-Cheesburger-traditional.jpg',\n    types: ['Classic', 'Thin'],\n    pricelist: {\n      sizes: [25, 30, 35],\n      prices: [7, 9, 11],\n    },\n  }];\n\n  const menu = products.map((product) => (<ProductCard product={product} />));\n\n  return (\n    <>\n    <div className=\"ui four stackable cards\">\n      {menu}\n    </div>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Navbar() {\n  return (\n    <div className=\"ui fixed main menu\">\n      <div className=\"ui container\">\n        <a href=\"#\" className=\"header item\">\n          Pizza Shop\n          <img className=\"logo\" src=\"https://images.vexels.com/media/users/3/157209/isolated/preview/725aa2473489db2e550656210c557f18-cheesy-pizza-icon-by-vexels.png\" />\n        </a>\n        <div className=\"right menu\">\n          <div className=\"ui simple dropdown item\">\n            Currency\n            <i className=\"dropdown icon\" />\n            <div className=\"menu\">\n              <a className=\"item\" href=\"#\">$ (USD)</a>\n              <a className=\"item\" href=\"#\">€ (EUR)</a>\n            </div>\n          </div>\n          <div className=\"item\">\n            <div className=\"ui orange button\">\n              <i className=\"shopping cart icon\" />\n              Cart\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n","import React from 'react';\nimport Menu from './menu';\nimport Navbar from './navbar';\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <div className=\"ui main container\" style={{marginTop: '5em'}}>\n        <Menu />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}